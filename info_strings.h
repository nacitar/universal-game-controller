#ifndef INCLUDED_UNIVERSAL_INPUT_INFO_STRINGS_H
#define INCLUDED_UNIVERSAL_INPUT_INFO_STRINGS_H

#include <linux/input.h>
inline int is_set_bitmap(unsigned int flag, unsigned long *bm, unsigned int max)
{
  return flag <= max && test_bit(flag, bm);
}
//is_set_bitmap(code, dev->keybit, KEY_MAX)
// Applies to propbit values too.

void get_bus_name(__u16 bustype, const char** bus_name) {
  *bus_name = NULL;
  switch (bustype) {
    case BUS_PCI: *bus_name = "BUS_PCI"; break;
    case BUS_ISAPNP: *bus_name = "BUS_ISAPNP"; break;
    case BUS_USB: *bus_name = "BUS_USB"; break;
    case BUS_HIL: *bus_name = "BUS_HIL"; break;
    case BUS_BLUETOOTH: *bus_name = "BUS_BLUETOOTH"; break;
    case BUS_VIRTUAL: *bus_name = "BUS_VIRTUAL"; break;
    case BUS_ISA: *bus_name = "BUS_ISA"; break;
    case BUS_I8042: *bus_name = "BUS_I8042"; break;
    case BUS_XTKBD: *bus_name = "BUS_XTKBD"; break;
    case BUS_RS232: *bus_name = "BUS_RS232"; break;
    case BUS_GAMEPORT: *bus_name = "BUS_GAMEPORT"; break;
    case BUS_PARPORT: *bus_name = "BUS_PARPORT"; break;
    case BUS_AMIGA: *bus_name = "BUS_AMIGA"; break;
    case BUS_ADB: *bus_name = "BUS_ADB"; break;
    case BUS_I2C: *bus_name = "BUS_I2C"; break;
    case BUS_HOST: *bus_name = "BUS_HOST"; break;
    case BUS_GSC: *bus_name = "BUS_GSC"; break;
    case BUS_ATARI: *bus_name = "BUS_ATARI"; break;
    case BUS_SPI: *bus_name = "BUS_SPI"; break;
    case BUS_RMI: *bus_name = "BUS_RMI"; break;
    case BUS_CEC: *bus_name = "BUS_CEC"; break;
    case BUS_INTEL_ISHTP: *bus_name = "BUS_INTEL_ISHTP"; break;
  }
}
void get_key_name(unsigned int code, const char** code_name) {
  *code_name = NULL;
  switch (code) {
    case KEY_RESERVED: *code_name = "KEY_RESERVED"; break;
    case KEY_ESC: *code_name = "KEY_ESC"; break;
    case KEY_1: *code_name = "KEY_1"; break;
    case KEY_2: *code_name = "KEY_2"; break;
    case KEY_3: *code_name = "KEY_3"; break;
    case KEY_4: *code_name = "KEY_4"; break;
    case KEY_5: *code_name = "KEY_5"; break;
    case KEY_6: *code_name = "KEY_6"; break;
    case KEY_7: *code_name = "KEY_7"; break;
    case KEY_8: *code_name = "KEY_8"; break;
    case KEY_9: *code_name = "KEY_9"; break;
    case KEY_0: *code_name = "KEY_0"; break;
    case KEY_MINUS: *code_name = "KEY_MINUS"; break;
    case KEY_EQUAL: *code_name = "KEY_EQUAL"; break;
    case KEY_BACKSPACE: *code_name = "KEY_BACKSPACE"; break;
    case KEY_TAB: *code_name = "KEY_TAB"; break;
    case KEY_Q: *code_name = "KEY_Q"; break;
    case KEY_W: *code_name = "KEY_W"; break;
    case KEY_E: *code_name = "KEY_E"; break;
    case KEY_R: *code_name = "KEY_R"; break;
    case KEY_T: *code_name = "KEY_T"; break;
    case KEY_Y: *code_name = "KEY_Y"; break;
    case KEY_U: *code_name = "KEY_U"; break;
    case KEY_I: *code_name = "KEY_I"; break;
    case KEY_O: *code_name = "KEY_O"; break;
    case KEY_P: *code_name = "KEY_P"; break;
    case KEY_LEFTBRACE: *code_name = "KEY_LEFTBRACE"; break;
    case KEY_RIGHTBRACE: *code_name = "KEY_RIGHTBRACE"; break;
    case KEY_ENTER: *code_name = "KEY_ENTER"; break;
    case KEY_LEFTCTRL: *code_name = "KEY_LEFTCTRL"; break;
    case KEY_A: *code_name = "KEY_A"; break;
    case KEY_S: *code_name = "KEY_S"; break;
    case KEY_D: *code_name = "KEY_D"; break;
    case KEY_F: *code_name = "KEY_F"; break;
    case KEY_G: *code_name = "KEY_G"; break;
    case KEY_H: *code_name = "KEY_H"; break;
    case KEY_J: *code_name = "KEY_J"; break;
    case KEY_K: *code_name = "KEY_K"; break;
    case KEY_L: *code_name = "KEY_L"; break;
    case KEY_SEMICOLON: *code_name = "KEY_SEMICOLON"; break;
    case KEY_APOSTROPHE: *code_name = "KEY_APOSTROPHE"; break;
    case KEY_GRAVE: *code_name = "KEY_GRAVE"; break;
    case KEY_LEFTSHIFT: *code_name = "KEY_LEFTSHIFT"; break;
    case KEY_BACKSLASH: *code_name = "KEY_BACKSLASH"; break;
    case KEY_Z: *code_name = "KEY_Z"; break;
    case KEY_X: *code_name = "KEY_X"; break;
    case KEY_C: *code_name = "KEY_C"; break;
    case KEY_V: *code_name = "KEY_V"; break;
    case KEY_B: *code_name = "KEY_B"; break;
    case KEY_N: *code_name = "KEY_N"; break;
    case KEY_M: *code_name = "KEY_M"; break;
    case KEY_COMMA: *code_name = "KEY_COMMA"; break;
    case KEY_DOT: *code_name = "KEY_DOT"; break;
    case KEY_SLASH: *code_name = "KEY_SLASH"; break;
    case KEY_RIGHTSHIFT: *code_name = "KEY_RIGHTSHIFT"; break;
    case KEY_KPASTERISK: *code_name = "KEY_KPASTERISK"; break;
    case KEY_LEFTALT: *code_name = "KEY_LEFTALT"; break;
    case KEY_SPACE: *code_name = "KEY_SPACE"; break;
    case KEY_CAPSLOCK: *code_name = "KEY_CAPSLOCK"; break;
    case KEY_F1: *code_name = "KEY_F1"; break;
    case KEY_F2: *code_name = "KEY_F2"; break;
    case KEY_F3: *code_name = "KEY_F3"; break;
    case KEY_F4: *code_name = "KEY_F4"; break;
    case KEY_F5: *code_name = "KEY_F5"; break;
    case KEY_F6: *code_name = "KEY_F6"; break;
    case KEY_F7: *code_name = "KEY_F7"; break;
    case KEY_F8: *code_name = "KEY_F8"; break;
    case KEY_F9: *code_name = "KEY_F9"; break;
    case KEY_F10: *code_name = "KEY_F10"; break;
    case KEY_NUMLOCK: *code_name = "KEY_NUMLOCK"; break;
    case KEY_SCROLLLOCK: *code_name = "KEY_SCROLLLOCK"; break;
    case KEY_KP7: *code_name = "KEY_KP7"; break;
    case KEY_KP8: *code_name = "KEY_KP8"; break;
    case KEY_KP9: *code_name = "KEY_KP9"; break;
    case KEY_KPMINUS: *code_name = "KEY_KPMINUS"; break;
    case KEY_KP4: *code_name = "KEY_KP4"; break;
    case KEY_KP5: *code_name = "KEY_KP5"; break;
    case KEY_KP6: *code_name = "KEY_KP6"; break;
    case KEY_KPPLUS: *code_name = "KEY_KPPLUS"; break;
    case KEY_KP1: *code_name = "KEY_KP1"; break;
    case KEY_KP2: *code_name = "KEY_KP2"; break;
    case KEY_KP3: *code_name = "KEY_KP3"; break;
    case KEY_KP0: *code_name = "KEY_KP0"; break;
    case KEY_KPDOT: *code_name = "KEY_KPDOT"; break;
    case KEY_ZENKAKUHANKAKU: *code_name = "KEY_ZENKAKUHANKAKU"; break;
    case KEY_102ND: *code_name = "KEY_102ND"; break;
    case KEY_F11: *code_name = "KEY_F11"; break;
    case KEY_F12: *code_name = "KEY_F12"; break;
    case KEY_RO: *code_name = "KEY_RO"; break;
    case KEY_KATAKANA: *code_name = "KEY_KATAKANA"; break;
    case KEY_HIRAGANA: *code_name = "KEY_HIRAGANA"; break;
    case KEY_HENKAN: *code_name = "KEY_HENKAN"; break;
    case KEY_KATAKANAHIRAGANA: *code_name = "KEY_KATAKANAHIRAGANA"; break;
    case KEY_MUHENKAN: *code_name = "KEY_MUHENKAN"; break;
    case KEY_KPJPCOMMA: *code_name = "KEY_KPJPCOMMA"; break;
    case KEY_KPENTER: *code_name = "KEY_KPENTER"; break;
    case KEY_RIGHTCTRL: *code_name = "KEY_RIGHTCTRL"; break;
    case KEY_KPSLASH: *code_name = "KEY_KPSLASH"; break;
    case KEY_SYSRQ: *code_name = "KEY_SYSRQ"; break;
    case KEY_RIGHTALT: *code_name = "KEY_RIGHTALT"; break;
    case KEY_LINEFEED: *code_name = "KEY_LINEFEED"; break;
    case KEY_HOME: *code_name = "KEY_HOME"; break;
    case KEY_UP: *code_name = "KEY_UP"; break;
    case KEY_PAGEUP: *code_name = "KEY_PAGEUP"; break;
    case KEY_LEFT: *code_name = "KEY_LEFT"; break;
    case KEY_RIGHT: *code_name = "KEY_RIGHT"; break;
    case KEY_END: *code_name = "KEY_END"; break;
    case KEY_DOWN: *code_name = "KEY_DOWN"; break;
    case KEY_PAGEDOWN: *code_name = "KEY_PAGEDOWN"; break;
    case KEY_INSERT: *code_name = "KEY_INSERT"; break;
    case KEY_DELETE: *code_name = "KEY_DELETE"; break;
    case KEY_MACRO: *code_name = "KEY_MACRO"; break;
    case KEY_MUTE: *code_name = "KEY_MUTE"; break;
    case KEY_VOLUMEDOWN: *code_name = "KEY_VOLUMEDOWN"; break;
    case KEY_VOLUMEUP: *code_name = "KEY_VOLUMEUP"; break;
    case KEY_POWER: *code_name = "KEY_POWER"; break;
    case KEY_KPEQUAL: *code_name = "KEY_KPEQUAL"; break;
    case KEY_KPPLUSMINUS: *code_name = "KEY_KPPLUSMINUS"; break;
    case KEY_PAUSE: *code_name = "KEY_PAUSE"; break;
    case KEY_SCALE: *code_name = "KEY_SCALE"; break;
    case KEY_KPCOMMA: *code_name = "KEY_KPCOMMA"; break;
    case KEY_HANGEUL: *code_name = "KEY_HANGEUL"; break;
    //case KEY_HANGUEL: *code_name = "KEY_HANGUEL"; break;
    case KEY_HANJA: *code_name = "KEY_HANJA"; break;
    case KEY_YEN: *code_name = "KEY_YEN"; break;
    case KEY_LEFTMETA: *code_name = "KEY_LEFTMETA"; break;
    case KEY_RIGHTMETA: *code_name = "KEY_RIGHTMETA"; break;
    case KEY_COMPOSE: *code_name = "KEY_COMPOSE"; break;
    case KEY_STOP: *code_name = "KEY_STOP"; break;
    case KEY_AGAIN: *code_name = "KEY_AGAIN"; break;
    case KEY_PROPS: *code_name = "KEY_PROPS"; break;
    case KEY_UNDO: *code_name = "KEY_UNDO"; break;
    case KEY_FRONT: *code_name = "KEY_FRONT"; break;
    case KEY_COPY: *code_name = "KEY_COPY"; break;
    case KEY_OPEN: *code_name = "KEY_OPEN"; break;
    case KEY_PASTE: *code_name = "KEY_PASTE"; break;
    case KEY_FIND: *code_name = "KEY_FIND"; break;
    case KEY_CUT: *code_name = "KEY_CUT"; break;
    case KEY_HELP: *code_name = "KEY_HELP"; break;
    case KEY_MENU: *code_name = "KEY_MENU"; break;
    case KEY_CALC: *code_name = "KEY_CALC"; break;
    case KEY_SETUP: *code_name = "KEY_SETUP"; break;
    case KEY_SLEEP: *code_name = "KEY_SLEEP"; break;
    case KEY_WAKEUP: *code_name = "KEY_WAKEUP"; break;
    case KEY_FILE: *code_name = "KEY_FILE"; break;
    case KEY_SENDFILE: *code_name = "KEY_SENDFILE"; break;
    case KEY_DELETEFILE: *code_name = "KEY_DELETEFILE"; break;
    case KEY_XFER: *code_name = "KEY_XFER"; break;
    case KEY_PROG1: *code_name = "KEY_PROG1"; break;
    case KEY_PROG2: *code_name = "KEY_PROG2"; break;
    case KEY_WWW: *code_name = "KEY_WWW"; break;
    case KEY_MSDOS: *code_name = "KEY_MSDOS"; break;
    //case KEY_COFFEE: *code_name = "KEY_COFFEE"; break;
    case KEY_SCREENLOCK: *code_name = "KEY_SCREENLOCK"; break;
    case KEY_ROTATE_DISPLAY: *code_name = "KEY_ROTATE_DISPLAY"; break;
    //case KEY_DIRECTION: *code_name = "KEY_DIRECTION"; break;
    case KEY_CYCLEWINDOWS: *code_name = "KEY_CYCLEWINDOWS"; break;
    case KEY_MAIL: *code_name = "KEY_MAIL"; break;
    case KEY_BOOKMARKS: *code_name = "KEY_BOOKMARKS"; break;
    case KEY_COMPUTER: *code_name = "KEY_COMPUTER"; break;
    case KEY_BACK: *code_name = "KEY_BACK"; break;
    case KEY_FORWARD: *code_name = "KEY_FORWARD"; break;
    case KEY_CLOSECD: *code_name = "KEY_CLOSECD"; break;
    case KEY_EJECTCD: *code_name = "KEY_EJECTCD"; break;
    case KEY_EJECTCLOSECD: *code_name = "KEY_EJECTCLOSECD"; break;
    case KEY_NEXTSONG: *code_name = "KEY_NEXTSONG"; break;
    case KEY_PLAYPAUSE: *code_name = "KEY_PLAYPAUSE"; break;
    case KEY_PREVIOUSSONG: *code_name = "KEY_PREVIOUSSONG"; break;
    case KEY_STOPCD: *code_name = "KEY_STOPCD"; break;
    case KEY_RECORD: *code_name = "KEY_RECORD"; break;
    case KEY_REWIND: *code_name = "KEY_REWIND"; break;
    case KEY_PHONE: *code_name = "KEY_PHONE"; break;
    case KEY_ISO: *code_name = "KEY_ISO"; break;
    case KEY_CONFIG: *code_name = "KEY_CONFIG"; break;
    case KEY_HOMEPAGE: *code_name = "KEY_HOMEPAGE"; break;
    case KEY_REFRESH: *code_name = "KEY_REFRESH"; break;
    case KEY_EXIT: *code_name = "KEY_EXIT"; break;
    case KEY_MOVE: *code_name = "KEY_MOVE"; break;
    case KEY_EDIT: *code_name = "KEY_EDIT"; break;
    case KEY_SCROLLUP: *code_name = "KEY_SCROLLUP"; break;
    case KEY_SCROLLDOWN: *code_name = "KEY_SCROLLDOWN"; break;
    case KEY_KPLEFTPAREN: *code_name = "KEY_KPLEFTPAREN"; break;
    case KEY_KPRIGHTPAREN: *code_name = "KEY_KPRIGHTPAREN"; break;
    case KEY_NEW: *code_name = "KEY_NEW"; break;
    case KEY_REDO: *code_name = "KEY_REDO"; break;
    case KEY_F13: *code_name = "KEY_F13"; break;
    case KEY_F14: *code_name = "KEY_F14"; break;
    case KEY_F15: *code_name = "KEY_F15"; break;
    case KEY_F16: *code_name = "KEY_F16"; break;
    case KEY_F17: *code_name = "KEY_F17"; break;
    case KEY_F18: *code_name = "KEY_F18"; break;
    case KEY_F19: *code_name = "KEY_F19"; break;
    case KEY_F20: *code_name = "KEY_F20"; break;
    case KEY_F21: *code_name = "KEY_F21"; break;
    case KEY_F22: *code_name = "KEY_F22"; break;
    case KEY_F23: *code_name = "KEY_F23"; break;
    case KEY_F24: *code_name = "KEY_F24"; break;
    case KEY_PLAYCD: *code_name = "KEY_PLAYCD"; break;
    case KEY_PAUSECD: *code_name = "KEY_PAUSECD"; break;
    case KEY_PROG3: *code_name = "KEY_PROG3"; break;
    case KEY_PROG4: *code_name = "KEY_PROG4"; break;
    case KEY_DASHBOARD: *code_name = "KEY_DASHBOARD"; break;
    case KEY_SUSPEND: *code_name = "KEY_SUSPEND"; break;
    case KEY_CLOSE: *code_name = "KEY_CLOSE"; break;
    case KEY_PLAY: *code_name = "KEY_PLAY"; break;
    case KEY_FASTFORWARD: *code_name = "KEY_FASTFORWARD"; break;
    case KEY_BASSBOOST: *code_name = "KEY_BASSBOOST"; break;
    case KEY_PRINT: *code_name = "KEY_PRINT"; break;
    case KEY_HP: *code_name = "KEY_HP"; break;
    case KEY_CAMERA: *code_name = "KEY_CAMERA"; break;
    case KEY_SOUND: *code_name = "KEY_SOUND"; break;
    case KEY_QUESTION: *code_name = "KEY_QUESTION"; break;
    case KEY_EMAIL: *code_name = "KEY_EMAIL"; break;
    case KEY_CHAT: *code_name = "KEY_CHAT"; break;
    case KEY_SEARCH: *code_name = "KEY_SEARCH"; break;
    case KEY_CONNECT: *code_name = "KEY_CONNECT"; break;
    case KEY_FINANCE: *code_name = "KEY_FINANCE"; break;
    case KEY_SPORT: *code_name = "KEY_SPORT"; break;
    case KEY_SHOP: *code_name = "KEY_SHOP"; break;
    case KEY_ALTERASE: *code_name = "KEY_ALTERASE"; break;
    case KEY_CANCEL: *code_name = "KEY_CANCEL"; break;
    case KEY_BRIGHTNESSDOWN: *code_name = "KEY_BRIGHTNESSDOWN"; break;
    case KEY_BRIGHTNESSUP: *code_name = "KEY_BRIGHTNESSUP"; break;
    case KEY_MEDIA: *code_name = "KEY_MEDIA"; break;
    case KEY_SWITCHVIDEOMODE: *code_name = "KEY_SWITCHVIDEOMODE"; break;
    case KEY_KBDILLUMTOGGLE: *code_name = "KEY_KBDILLUMTOGGLE"; break;
    case KEY_KBDILLUMDOWN: *code_name = "KEY_KBDILLUMDOWN"; break;
    case KEY_KBDILLUMUP: *code_name = "KEY_KBDILLUMUP"; break;
    case KEY_SEND: *code_name = "KEY_SEND"; break;
    case KEY_REPLY: *code_name = "KEY_REPLY"; break;
    case KEY_FORWARDMAIL: *code_name = "KEY_FORWARDMAIL"; break;
    case KEY_SAVE: *code_name = "KEY_SAVE"; break;
    case KEY_DOCUMENTS: *code_name = "KEY_DOCUMENTS"; break;
    case KEY_BATTERY: *code_name = "KEY_BATTERY"; break;
    case KEY_BLUETOOTH: *code_name = "KEY_BLUETOOTH"; break;
    case KEY_WLAN: *code_name = "KEY_WLAN"; break;
    case KEY_UWB: *code_name = "KEY_UWB"; break;
    case KEY_UNKNOWN: *code_name = "KEY_UNKNOWN"; break;
    case KEY_VIDEO_NEXT: *code_name = "KEY_VIDEO_NEXT"; break;
    case KEY_VIDEO_PREV: *code_name = "KEY_VIDEO_PREV"; break;
    case KEY_BRIGHTNESS_CYCLE: *code_name = "KEY_BRIGHTNESS_CYCLE"; break;
    case KEY_BRIGHTNESS_AUTO: *code_name = "KEY_BRIGHTNESS_AUTO"; break;
    //case KEY_BRIGHTNESS_ZERO: *code_name = "KEY_BRIGHTNESS_ZERO"; break;
    case KEY_DISPLAY_OFF: *code_name = "KEY_DISPLAY_OFF"; break;
    case KEY_WWAN: *code_name = "KEY_WWAN"; break;
    //case KEY_WIMAX: *code_name = "KEY_WIMAX"; break;
    case KEY_RFKILL: *code_name = "KEY_RFKILL"; break;
    case KEY_MICMUTE: *code_name = "KEY_MICMUTE"; break;
    //case BTN_MISC: *code_name = "BTN_MISC"; break;
    case BTN_0: *code_name = "BTN_0"; break;
    case BTN_1: *code_name = "BTN_1"; break;
    case BTN_2: *code_name = "BTN_2"; break;
    case BTN_3: *code_name = "BTN_3"; break;
    case BTN_4: *code_name = "BTN_4"; break;
    case BTN_5: *code_name = "BTN_5"; break;
    case BTN_6: *code_name = "BTN_6"; break;
    case BTN_7: *code_name = "BTN_7"; break;
    case BTN_8: *code_name = "BTN_8"; break;
    case BTN_9: *code_name = "BTN_9"; break;
    //case BTN_MOUSE: *code_name = "BTN_MOUSE"; break;
    case BTN_LEFT: *code_name = "BTN_LEFT"; break;
    case BTN_RIGHT: *code_name = "BTN_RIGHT"; break;
    case BTN_MIDDLE: *code_name = "BTN_MIDDLE"; break;
    case BTN_SIDE: *code_name = "BTN_SIDE"; break;
    case BTN_EXTRA: *code_name = "BTN_EXTRA"; break;
    case BTN_FORWARD: *code_name = "BTN_FORWARD"; break;
    case BTN_BACK: *code_name = "BTN_BACK"; break;
    case BTN_TASK: *code_name = "BTN_TASK"; break;
    //case BTN_JOYSTICK: *code_name = "BTN_JOYSTICK"; break;
    case BTN_TRIGGER: *code_name = "BTN_TRIGGER"; break;
    case BTN_THUMB: *code_name = "BTN_THUMB"; break;
    case BTN_THUMB2: *code_name = "BTN_THUMB2"; break;
    case BTN_TOP: *code_name = "BTN_TOP"; break;
    case BTN_TOP2: *code_name = "BTN_TOP2"; break;
    case BTN_PINKIE: *code_name = "BTN_PINKIE"; break;
    case BTN_BASE: *code_name = "BTN_BASE"; break;
    case BTN_BASE2: *code_name = "BTN_BASE2"; break;
    case BTN_BASE3: *code_name = "BTN_BASE3"; break;
    case BTN_BASE4: *code_name = "BTN_BASE4"; break;
    case BTN_BASE5: *code_name = "BTN_BASE5"; break;
    case BTN_BASE6: *code_name = "BTN_BASE6"; break;
    case BTN_DEAD: *code_name = "BTN_DEAD"; break;
    //case BTN_GAMEPAD: *code_name = "BTN_GAMEPAD"; break;
    case BTN_SOUTH: *code_name = "BTN_SOUTH"; break;
    //case BTN_A: *code_name = "BTN_A"; break;
    case BTN_EAST: *code_name = "BTN_EAST"; break;
    //case BTN_B: *code_name = "BTN_B"; break;
    case BTN_C: *code_name = "BTN_C"; break;
    case BTN_NORTH: *code_name = "BTN_NORTH"; break;
    //case BTN_X: *code_name = "BTN_X"; break;
    case BTN_WEST: *code_name = "BTN_WEST"; break;
    //case BTN_Y: *code_name = "BTN_Y"; break;
    case BTN_Z: *code_name = "BTN_Z"; break;
    case BTN_TL: *code_name = "BTN_TL"; break;
    case BTN_TR: *code_name = "BTN_TR"; break;
    case BTN_TL2: *code_name = "BTN_TL2"; break;
    case BTN_TR2: *code_name = "BTN_TR2"; break;
    case BTN_SELECT: *code_name = "BTN_SELECT"; break;
    case BTN_START: *code_name = "BTN_START"; break;
    case BTN_MODE: *code_name = "BTN_MODE"; break;
    case BTN_THUMBL: *code_name = "BTN_THUMBL"; break;
    case BTN_THUMBR: *code_name = "BTN_THUMBR"; break;
    //case BTN_DIGI: *code_name = "BTN_DIGI"; break;
    case BTN_TOOL_PEN: *code_name = "BTN_TOOL_PEN"; break;
    case BTN_TOOL_RUBBER: *code_name = "BTN_TOOL_RUBBER"; break;
    case BTN_TOOL_BRUSH: *code_name = "BTN_TOOL_BRUSH"; break;
    case BTN_TOOL_PENCIL: *code_name = "BTN_TOOL_PENCIL"; break;
    case BTN_TOOL_AIRBRUSH: *code_name = "BTN_TOOL_AIRBRUSH"; break;
    case BTN_TOOL_FINGER: *code_name = "BTN_TOOL_FINGER"; break;
    case BTN_TOOL_MOUSE: *code_name = "BTN_TOOL_MOUSE"; break;
    case BTN_TOOL_LENS: *code_name = "BTN_TOOL_LENS"; break;
    case BTN_TOOL_QUINTTAP: *code_name = "BTN_TOOL_QUINTTAP"; break;
    case BTN_TOUCH: *code_name = "BTN_TOUCH"; break;
    case BTN_STYLUS: *code_name = "BTN_STYLUS"; break;
    case BTN_STYLUS2: *code_name = "BTN_STYLUS2"; break;
    case BTN_TOOL_DOUBLETAP: *code_name = "BTN_TOOL_DOUBLETAP"; break;
    case BTN_TOOL_TRIPLETAP: *code_name = "BTN_TOOL_TRIPLETAP"; break;
    case BTN_TOOL_QUADTAP: *code_name = "BTN_TOOL_QUADTAP"; break;
    //case BTN_WHEEL: *code_name = "BTN_WHEEL"; break;
    case BTN_GEAR_DOWN: *code_name = "BTN_GEAR_DOWN"; break;
    case BTN_GEAR_UP: *code_name = "BTN_GEAR_UP"; break;
    case KEY_OK: *code_name = "KEY_OK"; break;
    case KEY_SELECT: *code_name = "KEY_SELECT"; break;
    case KEY_GOTO: *code_name = "KEY_GOTO"; break;
    case KEY_CLEAR: *code_name = "KEY_CLEAR"; break;
    case KEY_POWER2: *code_name = "KEY_POWER2"; break;
    case KEY_OPTION: *code_name = "KEY_OPTION"; break;
    case KEY_INFO: *code_name = "KEY_INFO"; break;
    case KEY_TIME: *code_name = "KEY_TIME"; break;
    case KEY_VENDOR: *code_name = "KEY_VENDOR"; break;
    case KEY_ARCHIVE: *code_name = "KEY_ARCHIVE"; break;
    case KEY_PROGRAM: *code_name = "KEY_PROGRAM"; break;
    case KEY_CHANNEL: *code_name = "KEY_CHANNEL"; break;
    case KEY_FAVORITES: *code_name = "KEY_FAVORITES"; break;
    case KEY_EPG: *code_name = "KEY_EPG"; break;
    case KEY_PVR: *code_name = "KEY_PVR"; break;
    case KEY_MHP: *code_name = "KEY_MHP"; break;
    case KEY_LANGUAGE: *code_name = "KEY_LANGUAGE"; break;
    case KEY_TITLE: *code_name = "KEY_TITLE"; break;
    case KEY_SUBTITLE: *code_name = "KEY_SUBTITLE"; break;
    case KEY_ANGLE: *code_name = "KEY_ANGLE"; break;
    case KEY_ZOOM: *code_name = "KEY_ZOOM"; break;
    case KEY_MODE: *code_name = "KEY_MODE"; break;
    case KEY_KEYBOARD: *code_name = "KEY_KEYBOARD"; break;
    case KEY_SCREEN: *code_name = "KEY_SCREEN"; break;
    case KEY_PC: *code_name = "KEY_PC"; break;
    case KEY_TV: *code_name = "KEY_TV"; break;
    case KEY_TV2: *code_name = "KEY_TV2"; break;
    case KEY_VCR: *code_name = "KEY_VCR"; break;
    case KEY_VCR2: *code_name = "KEY_VCR2"; break;
    case KEY_SAT: *code_name = "KEY_SAT"; break;
    case KEY_SAT2: *code_name = "KEY_SAT2"; break;
    case KEY_CD: *code_name = "KEY_CD"; break;
    case KEY_TAPE: *code_name = "KEY_TAPE"; break;
    case KEY_RADIO: *code_name = "KEY_RADIO"; break;
    case KEY_TUNER: *code_name = "KEY_TUNER"; break;
    case KEY_PLAYER: *code_name = "KEY_PLAYER"; break;
    case KEY_TEXT: *code_name = "KEY_TEXT"; break;
    case KEY_DVD: *code_name = "KEY_DVD"; break;
    case KEY_AUX: *code_name = "KEY_AUX"; break;
    case KEY_MP3: *code_name = "KEY_MP3"; break;
    case KEY_AUDIO: *code_name = "KEY_AUDIO"; break;
    case KEY_VIDEO: *code_name = "KEY_VIDEO"; break;
    case KEY_DIRECTORY: *code_name = "KEY_DIRECTORY"; break;
    case KEY_LIST: *code_name = "KEY_LIST"; break;
    case KEY_MEMO: *code_name = "KEY_MEMO"; break;
    case KEY_CALENDAR: *code_name = "KEY_CALENDAR"; break;
    case KEY_RED: *code_name = "KEY_RED"; break;
    case KEY_GREEN: *code_name = "KEY_GREEN"; break;
    case KEY_YELLOW: *code_name = "KEY_YELLOW"; break;
    case KEY_BLUE: *code_name = "KEY_BLUE"; break;
    case KEY_CHANNELUP: *code_name = "KEY_CHANNELUP"; break;
    case KEY_CHANNELDOWN: *code_name = "KEY_CHANNELDOWN"; break;
    case KEY_FIRST: *code_name = "KEY_FIRST"; break;
    case KEY_LAST: *code_name = "KEY_LAST"; break;
    case KEY_AB: *code_name = "KEY_AB"; break;
    case KEY_NEXT: *code_name = "KEY_NEXT"; break;
    case KEY_RESTART: *code_name = "KEY_RESTART"; break;
    case KEY_SLOW: *code_name = "KEY_SLOW"; break;
    case KEY_SHUFFLE: *code_name = "KEY_SHUFFLE"; break;
    case KEY_BREAK: *code_name = "KEY_BREAK"; break;
    case KEY_PREVIOUS: *code_name = "KEY_PREVIOUS"; break;
    case KEY_DIGITS: *code_name = "KEY_DIGITS"; break;
    case KEY_TEEN: *code_name = "KEY_TEEN"; break;
    case KEY_TWEN: *code_name = "KEY_TWEN"; break;
    case KEY_VIDEOPHONE: *code_name = "KEY_VIDEOPHONE"; break;
    case KEY_GAMES: *code_name = "KEY_GAMES"; break;
    case KEY_ZOOMIN: *code_name = "KEY_ZOOMIN"; break;
    case KEY_ZOOMOUT: *code_name = "KEY_ZOOMOUT"; break;
    case KEY_ZOOMRESET: *code_name = "KEY_ZOOMRESET"; break;
    case KEY_WORDPROCESSOR: *code_name = "KEY_WORDPROCESSOR"; break;
    case KEY_EDITOR: *code_name = "KEY_EDITOR"; break;
    case KEY_SPREADSHEET: *code_name = "KEY_SPREADSHEET"; break;
    case KEY_GRAPHICSEDITOR: *code_name = "KEY_GRAPHICSEDITOR"; break;
    case KEY_PRESENTATION: *code_name = "KEY_PRESENTATION"; break;
    case KEY_DATABASE: *code_name = "KEY_DATABASE"; break;
    case KEY_NEWS: *code_name = "KEY_NEWS"; break;
    case KEY_VOICEMAIL: *code_name = "KEY_VOICEMAIL"; break;
    case KEY_ADDRESSBOOK: *code_name = "KEY_ADDRESSBOOK"; break;
    case KEY_MESSENGER: *code_name = "KEY_MESSENGER"; break;
    case KEY_DISPLAYTOGGLE: *code_name = "KEY_DISPLAYTOGGLE"; break;
    //case KEY_BRIGHTNESS_TOGGLE: *code_name = "KEY_BRIGHTNESS_TOGGLE"; break;
    case KEY_SPELLCHECK: *code_name = "KEY_SPELLCHECK"; break;
    case KEY_LOGOFF: *code_name = "KEY_LOGOFF"; break;
    case KEY_DOLLAR: *code_name = "KEY_DOLLAR"; break;
    case KEY_EURO: *code_name = "KEY_EURO"; break;
    case KEY_FRAMEBACK: *code_name = "KEY_FRAMEBACK"; break;
    case KEY_FRAMEFORWARD: *code_name = "KEY_FRAMEFORWARD"; break;
    case KEY_CONTEXT_MENU: *code_name = "KEY_CONTEXT_MENU"; break;
    case KEY_MEDIA_REPEAT: *code_name = "KEY_MEDIA_REPEAT"; break;
    case KEY_10CHANNELSUP: *code_name = "KEY_10CHANNELSUP"; break;
    case KEY_10CHANNELSDOWN: *code_name = "KEY_10CHANNELSDOWN"; break;
    case KEY_IMAGES: *code_name = "KEY_IMAGES"; break;
    case KEY_DEL_EOL: *code_name = "KEY_DEL_EOL"; break;
    case KEY_DEL_EOS: *code_name = "KEY_DEL_EOS"; break;
    case KEY_INS_LINE: *code_name = "KEY_INS_LINE"; break;
    case KEY_DEL_LINE: *code_name = "KEY_DEL_LINE"; break;
    case KEY_FN: *code_name = "KEY_FN"; break;
    case KEY_FN_ESC: *code_name = "KEY_FN_ESC"; break;
    case KEY_FN_F1: *code_name = "KEY_FN_F1"; break;
    case KEY_FN_F2: *code_name = "KEY_FN_F2"; break;
    case KEY_FN_F3: *code_name = "KEY_FN_F3"; break;
    case KEY_FN_F4: *code_name = "KEY_FN_F4"; break;
    case KEY_FN_F5: *code_name = "KEY_FN_F5"; break;
    case KEY_FN_F6: *code_name = "KEY_FN_F6"; break;
    case KEY_FN_F7: *code_name = "KEY_FN_F7"; break;
    case KEY_FN_F8: *code_name = "KEY_FN_F8"; break;
    case KEY_FN_F9: *code_name = "KEY_FN_F9"; break;
    case KEY_FN_F10: *code_name = "KEY_FN_F10"; break;
    case KEY_FN_F11: *code_name = "KEY_FN_F11"; break;
    case KEY_FN_F12: *code_name = "KEY_FN_F12"; break;
    case KEY_FN_1: *code_name = "KEY_FN_1"; break;
    case KEY_FN_2: *code_name = "KEY_FN_2"; break;
    case KEY_FN_D: *code_name = "KEY_FN_D"; break;
    case KEY_FN_E: *code_name = "KEY_FN_E"; break;
    case KEY_FN_F: *code_name = "KEY_FN_F"; break;
    case KEY_FN_S: *code_name = "KEY_FN_S"; break;
    case KEY_FN_B: *code_name = "KEY_FN_B"; break;
    case KEY_BRL_DOT1: *code_name = "KEY_BRL_DOT1"; break;
    case KEY_BRL_DOT2: *code_name = "KEY_BRL_DOT2"; break;
    case KEY_BRL_DOT3: *code_name = "KEY_BRL_DOT3"; break;
    case KEY_BRL_DOT4: *code_name = "KEY_BRL_DOT4"; break;
    case KEY_BRL_DOT5: *code_name = "KEY_BRL_DOT5"; break;
    case KEY_BRL_DOT6: *code_name = "KEY_BRL_DOT6"; break;
    case KEY_BRL_DOT7: *code_name = "KEY_BRL_DOT7"; break;
    case KEY_BRL_DOT8: *code_name = "KEY_BRL_DOT8"; break;
    case KEY_BRL_DOT9: *code_name = "KEY_BRL_DOT9"; break;
    case KEY_BRL_DOT10: *code_name = "KEY_BRL_DOT10"; break;
    case KEY_NUMERIC_0: *code_name = "KEY_NUMERIC_0"; break;
    case KEY_NUMERIC_1: *code_name = "KEY_NUMERIC_1"; break;
    case KEY_NUMERIC_2: *code_name = "KEY_NUMERIC_2"; break;
    case KEY_NUMERIC_3: *code_name = "KEY_NUMERIC_3"; break;
    case KEY_NUMERIC_4: *code_name = "KEY_NUMERIC_4"; break;
    case KEY_NUMERIC_5: *code_name = "KEY_NUMERIC_5"; break;
    case KEY_NUMERIC_6: *code_name = "KEY_NUMERIC_6"; break;
    case KEY_NUMERIC_7: *code_name = "KEY_NUMERIC_7"; break;
    case KEY_NUMERIC_8: *code_name = "KEY_NUMERIC_8"; break;
    case KEY_NUMERIC_9: *code_name = "KEY_NUMERIC_9"; break;
    case KEY_NUMERIC_STAR: *code_name = "KEY_NUMERIC_STAR"; break;
    case KEY_NUMERIC_POUND: *code_name = "KEY_NUMERIC_POUND"; break;
    case KEY_NUMERIC_A: *code_name = "KEY_NUMERIC_A"; break;
    case KEY_NUMERIC_B: *code_name = "KEY_NUMERIC_B"; break;
    case KEY_NUMERIC_C: *code_name = "KEY_NUMERIC_C"; break;
    case KEY_NUMERIC_D: *code_name = "KEY_NUMERIC_D"; break;
    case KEY_CAMERA_FOCUS: *code_name = "KEY_CAMERA_FOCUS"; break;
    case KEY_WPS_BUTTON: *code_name = "KEY_WPS_BUTTON"; break;
    case KEY_TOUCHPAD_TOGGLE: *code_name = "KEY_TOUCHPAD_TOGGLE"; break;
    case KEY_TOUCHPAD_ON: *code_name = "KEY_TOUCHPAD_ON"; break;
    case KEY_TOUCHPAD_OFF: *code_name = "KEY_TOUCHPAD_OFF"; break;
    case KEY_CAMERA_ZOOMIN: *code_name = "KEY_CAMERA_ZOOMIN"; break;
    case KEY_CAMERA_ZOOMOUT: *code_name = "KEY_CAMERA_ZOOMOUT"; break;
    case KEY_CAMERA_UP: *code_name = "KEY_CAMERA_UP"; break;
    case KEY_CAMERA_DOWN: *code_name = "KEY_CAMERA_DOWN"; break;
    case KEY_CAMERA_LEFT: *code_name = "KEY_CAMERA_LEFT"; break;
    case KEY_CAMERA_RIGHT: *code_name = "KEY_CAMERA_RIGHT"; break;
    case KEY_ATTENDANT_ON: *code_name = "KEY_ATTENDANT_ON"; break;
    case KEY_ATTENDANT_OFF: *code_name = "KEY_ATTENDANT_OFF"; break;
    case KEY_ATTENDANT_TOGGLE: *code_name = "KEY_ATTENDANT_TOGGLE"; break;
    case KEY_LIGHTS_TOGGLE: *code_name = "KEY_LIGHTS_TOGGLE"; break;
    case BTN_DPAD_UP: *code_name = "BTN_DPAD_UP"; break;
    case BTN_DPAD_DOWN: *code_name = "BTN_DPAD_DOWN"; break;
    case BTN_DPAD_LEFT: *code_name = "BTN_DPAD_LEFT"; break;
    case BTN_DPAD_RIGHT: *code_name = "BTN_DPAD_RIGHT"; break;
    case KEY_ALS_TOGGLE: *code_name = "KEY_ALS_TOGGLE"; break;
    case KEY_BUTTONCONFIG: *code_name = "KEY_BUTTONCONFIG"; break;
    case KEY_TASKMANAGER: *code_name = "KEY_TASKMANAGER"; break;
    case KEY_JOURNAL: *code_name = "KEY_JOURNAL"; break;
    case KEY_CONTROLPANEL: *code_name = "KEY_CONTROLPANEL"; break;
    case KEY_APPSELECT: *code_name = "KEY_APPSELECT"; break;
    case KEY_SCREENSAVER: *code_name = "KEY_SCREENSAVER"; break;
    case KEY_VOICECOMMAND: *code_name = "KEY_VOICECOMMAND"; break;
#if defined(KEY_ASSISTANT)
    case KEY_ASSISTANT: *code_name = "KEY_ASSISTANT"; break;
#endif
    case KEY_BRIGHTNESS_MIN: *code_name = "KEY_BRIGHTNESS_MIN"; break;
    case KEY_BRIGHTNESS_MAX: *code_name = "KEY_BRIGHTNESS_MAX"; break;
    case KEY_KBDINPUTASSIST_PREV: *code_name = "KEY_KBDINPUTASSIST_PREV"; break;
    case KEY_KBDINPUTASSIST_NEXT: *code_name = "KEY_KBDINPUTASSIST_NEXT"; break;
    case KEY_KBDINPUTASSIST_PREVGROUP: *code_name = "KEY_KBDINPUTASSIST_PREVGROUP"; break;
    case KEY_KBDINPUTASSIST_NEXTGROUP: *code_name = "KEY_KBDINPUTASSIST_NEXTGROUP"; break;
    case KEY_KBDINPUTASSIST_ACCEPT: *code_name = "KEY_KBDINPUTASSIST_ACCEPT"; break;
    case KEY_KBDINPUTASSIST_CANCEL: *code_name = "KEY_KBDINPUTASSIST_CANCEL"; break;
    case KEY_RIGHT_UP: *code_name = "KEY_RIGHT_UP"; break;
    case KEY_RIGHT_DOWN: *code_name = "KEY_RIGHT_DOWN"; break;
    case KEY_LEFT_UP: *code_name = "KEY_LEFT_UP"; break;
    case KEY_LEFT_DOWN: *code_name = "KEY_LEFT_DOWN"; break;
    case KEY_ROOT_MENU: *code_name = "KEY_ROOT_MENU"; break;
    case KEY_MEDIA_TOP_MENU: *code_name = "KEY_MEDIA_TOP_MENU"; break;
    case KEY_NUMERIC_11: *code_name = "KEY_NUMERIC_11"; break;
    case KEY_NUMERIC_12: *code_name = "KEY_NUMERIC_12"; break;
    case KEY_AUDIO_DESC: *code_name = "KEY_AUDIO_DESC"; break;
    case KEY_3D_MODE: *code_name = "KEY_3D_MODE"; break;
    case KEY_NEXT_FAVORITE: *code_name = "KEY_NEXT_FAVORITE"; break;
    case KEY_STOP_RECORD: *code_name = "KEY_STOP_RECORD"; break;
    case KEY_PAUSE_RECORD: *code_name = "KEY_PAUSE_RECORD"; break;
    case KEY_VOD: *code_name = "KEY_VOD"; break;
    case KEY_UNMUTE: *code_name = "KEY_UNMUTE"; break;
    case KEY_FASTREVERSE: *code_name = "KEY_FASTREVERSE"; break;
    case KEY_SLOWREVERSE: *code_name = "KEY_SLOWREVERSE"; break;
    case KEY_DATA: *code_name = "KEY_DATA"; break;
#if defined(KEY_ONSCREEN_KEYBOARD)
    case KEY_ONSCREEN_KEYBOARD: *code_name = "KEY_ONSCREEN_KEYBOARD"; break;
#endif
    //case BTN_TRIGGER_HAPPY: *code_name = "BTN_TRIGGER_HAPPY"; break;
    case BTN_TRIGGER_HAPPY1: *code_name = "BTN_TRIGGER_HAPPY1"; break;
    case BTN_TRIGGER_HAPPY2: *code_name = "BTN_TRIGGER_HAPPY2"; break;
    case BTN_TRIGGER_HAPPY3: *code_name = "BTN_TRIGGER_HAPPY3"; break;
    case BTN_TRIGGER_HAPPY4: *code_name = "BTN_TRIGGER_HAPPY4"; break;
    case BTN_TRIGGER_HAPPY5: *code_name = "BTN_TRIGGER_HAPPY5"; break;
    case BTN_TRIGGER_HAPPY6: *code_name = "BTN_TRIGGER_HAPPY6"; break;
    case BTN_TRIGGER_HAPPY7: *code_name = "BTN_TRIGGER_HAPPY7"; break;
    case BTN_TRIGGER_HAPPY8: *code_name = "BTN_TRIGGER_HAPPY8"; break;
    case BTN_TRIGGER_HAPPY9: *code_name = "BTN_TRIGGER_HAPPY9"; break;
    case BTN_TRIGGER_HAPPY10: *code_name = "BTN_TRIGGER_HAPPY10"; break;
    case BTN_TRIGGER_HAPPY11: *code_name = "BTN_TRIGGER_HAPPY11"; break;
    case BTN_TRIGGER_HAPPY12: *code_name = "BTN_TRIGGER_HAPPY12"; break;
    case BTN_TRIGGER_HAPPY13: *code_name = "BTN_TRIGGER_HAPPY13"; break;
    case BTN_TRIGGER_HAPPY14: *code_name = "BTN_TRIGGER_HAPPY14"; break;
    case BTN_TRIGGER_HAPPY15: *code_name = "BTN_TRIGGER_HAPPY15"; break;
    case BTN_TRIGGER_HAPPY16: *code_name = "BTN_TRIGGER_HAPPY16"; break;
    case BTN_TRIGGER_HAPPY17: *code_name = "BTN_TRIGGER_HAPPY17"; break;
    case BTN_TRIGGER_HAPPY18: *code_name = "BTN_TRIGGER_HAPPY18"; break;
    case BTN_TRIGGER_HAPPY19: *code_name = "BTN_TRIGGER_HAPPY19"; break;
    case BTN_TRIGGER_HAPPY20: *code_name = "BTN_TRIGGER_HAPPY20"; break;
    case BTN_TRIGGER_HAPPY21: *code_name = "BTN_TRIGGER_HAPPY21"; break;
    case BTN_TRIGGER_HAPPY22: *code_name = "BTN_TRIGGER_HAPPY22"; break;
    case BTN_TRIGGER_HAPPY23: *code_name = "BTN_TRIGGER_HAPPY23"; break;
    case BTN_TRIGGER_HAPPY24: *code_name = "BTN_TRIGGER_HAPPY24"; break;
    case BTN_TRIGGER_HAPPY25: *code_name = "BTN_TRIGGER_HAPPY25"; break;
    case BTN_TRIGGER_HAPPY26: *code_name = "BTN_TRIGGER_HAPPY26"; break;
    case BTN_TRIGGER_HAPPY27: *code_name = "BTN_TRIGGER_HAPPY27"; break;
    case BTN_TRIGGER_HAPPY28: *code_name = "BTN_TRIGGER_HAPPY28"; break;
    case BTN_TRIGGER_HAPPY29: *code_name = "BTN_TRIGGER_HAPPY29"; break;
    case BTN_TRIGGER_HAPPY30: *code_name = "BTN_TRIGGER_HAPPY30"; break;
    case BTN_TRIGGER_HAPPY31: *code_name = "BTN_TRIGGER_HAPPY31"; break;
    case BTN_TRIGGER_HAPPY32: *code_name = "BTN_TRIGGER_HAPPY32"; break;
    case BTN_TRIGGER_HAPPY33: *code_name = "BTN_TRIGGER_HAPPY33"; break;
    case BTN_TRIGGER_HAPPY34: *code_name = "BTN_TRIGGER_HAPPY34"; break;
    case BTN_TRIGGER_HAPPY35: *code_name = "BTN_TRIGGER_HAPPY35"; break;
    case BTN_TRIGGER_HAPPY36: *code_name = "BTN_TRIGGER_HAPPY36"; break;
    case BTN_TRIGGER_HAPPY37: *code_name = "BTN_TRIGGER_HAPPY37"; break;
    case BTN_TRIGGER_HAPPY38: *code_name = "BTN_TRIGGER_HAPPY38"; break;
    case BTN_TRIGGER_HAPPY39: *code_name = "BTN_TRIGGER_HAPPY39"; break;
    case BTN_TRIGGER_HAPPY40: *code_name = "BTN_TRIGGER_HAPPY40"; break;
  }
}
void get_event_name(unsigned int type, unsigned int code,
      const char** event_name, const char** code_name) {
  *event_name = NULL;
  *code_name = NULL;
  switch (type) {
    case EV_SYN: {
        *event_name = "EV_SYN";
        switch (code) {
          case SYN_REPORT: *code_name = "SYN_REPORT"; break;
          case SYN_CONFIG: *code_name = "SYN_CONFIG"; break;
          case SYN_MT_REPORT: *code_name = "SYN_MT_REPORT"; break;
          case SYN_DROPPED: *code_name = "SYN_DROPPED"; break;
        }
        break;
    }
    case EV_KEY: {
        *event_name = "EV_KEY";
        get_key_name(code, code_name);
        break;
    }
    case EV_REL: {
        *event_name = "EV_REL";
        switch (code) {
          case REL_X: *code_name = "REL_X"; break;
          case REL_Y: *code_name = "REL_Y"; break;
          case REL_Z: *code_name = "REL_Z"; break;
          case REL_RX: *code_name = "REL_RX"; break;
          case REL_RY: *code_name = "REL_RY"; break;
          case REL_RZ: *code_name = "REL_RZ"; break;
          case REL_HWHEEL: *code_name = "REL_HWHEEL"; break;
          case REL_DIAL: *code_name = "REL_DIAL"; break;
          case REL_WHEEL: *code_name = "REL_WHEEL"; break;
          case REL_MISC: *code_name = "REL_MISC"; break;
        }
        break;
    }
    case EV_ABS: {
        *event_name = "EV_ABS";
        switch (code) {
          case ABS_X: *code_name = "ABS_X"; break;
          case ABS_Y: *code_name = "ABS_Y"; break;
          case ABS_Z: *code_name = "ABS_Z"; break;
          case ABS_RX: *code_name = "ABS_RX"; break;
          case ABS_RY: *code_name = "ABS_RY"; break;
          case ABS_RZ: *code_name = "ABS_RZ"; break;
          case ABS_THROTTLE: *code_name = "ABS_THROTTLE"; break;
          case ABS_RUDDER: *code_name = "ABS_RUDDER"; break;
          case ABS_WHEEL: *code_name = "ABS_WHEEL"; break;
          case ABS_GAS: *code_name = "ABS_GAS"; break;
          case ABS_BRAKE: *code_name = "ABS_BRAKE"; break;
          case ABS_HAT0X: *code_name = "ABS_HAT0X"; break;
          case ABS_HAT0Y: *code_name = "ABS_HAT0Y"; break;
          case ABS_HAT1X: *code_name = "ABS_HAT1X"; break;
          case ABS_HAT1Y: *code_name = "ABS_HAT1Y"; break;
          case ABS_HAT2X: *code_name = "ABS_HAT2X"; break;
          case ABS_HAT2Y: *code_name = "ABS_HAT2Y"; break;
          case ABS_HAT3X: *code_name = "ABS_HAT3X"; break;
          case ABS_HAT3Y: *code_name = "ABS_HAT3Y"; break;
          case ABS_PRESSURE: *code_name = "ABS_PRESSURE"; break;
          case ABS_DISTANCE: *code_name = "ABS_DISTANCE"; break;
          case ABS_TILT_X: *code_name = "ABS_TILT_X"; break;
          case ABS_TILT_Y: *code_name = "ABS_TILT_Y"; break;
          case ABS_TOOL_WIDTH: *code_name = "ABS_TOOL_WIDTH"; break;
          case ABS_VOLUME: *code_name = "ABS_VOLUME"; break;
          case ABS_MISC: *code_name = "ABS_MISC"; break;
          case ABS_MT_SLOT: *code_name = "ABS_MT_SLOT"; break;
          case ABS_MT_TOUCH_MAJOR: *code_name = "ABS_MT_TOUCH_MAJOR"; break;
          case ABS_MT_TOUCH_MINOR: *code_name = "ABS_MT_TOUCH_MINOR"; break;
          case ABS_MT_WIDTH_MAJOR: *code_name = "ABS_MT_WIDTH_MAJOR"; break;
          case ABS_MT_WIDTH_MINOR: *code_name = "ABS_MT_WIDTH_MINOR"; break;
          case ABS_MT_ORIENTATION: *code_name = "ABS_MT_ORIENTATION"; break;
          case ABS_MT_POSITION_X: *code_name = "ABS_MT_POSITION_X"; break;
          case ABS_MT_POSITION_Y: *code_name = "ABS_MT_POSITION_Y"; break;
          case ABS_MT_TOOL_TYPE: *code_name = "ABS_MT_TOOL_TYPE"; break;
          case ABS_MT_BLOB_ID: *code_name = "ABS_MT_BLOB_ID"; break;
          case ABS_MT_TRACKING_ID: *code_name = "ABS_MT_TRACKING_ID"; break;
          case ABS_MT_PRESSURE: *code_name = "ABS_MT_PRESSURE"; break;
          case ABS_MT_DISTANCE: *code_name = "ABS_MT_DISTANCE"; break;
          case ABS_MT_TOOL_X: *code_name = "ABS_MT_TOOL_X"; break;
          case ABS_MT_TOOL_Y: *code_name = "ABS_MT_TOOL_Y"; break;
        }
        break;
    }
    case EV_MSC: {
        *event_name = "EV_MSC";
        switch (code) {
          case MSC_SERIAL: *code_name = "MSC_SERIAL"; break;
          case MSC_PULSELED: *code_name = "MSC_PULSELED"; break;
          case MSC_GESTURE: *code_name = "MSC_GESTURE"; break;
          case MSC_RAW: *code_name = "MSC_RAW"; break;
          case MSC_SCAN: *code_name = "MSC_SCAN"; break;
          case MSC_TIMESTAMP: *code_name = "MSC_TIMESTAMP"; break;
        }
        break;
    }
    case EV_SW: {
        *event_name = "EV_SW";
        switch (code) {
          case SW_LID: *code_name = "SW_LID"; break;
          case SW_TABLET_MODE: *code_name = "SW_TABLET_MODE"; break;
          case SW_HEADPHONE_INSERT: *code_name = "SW_HEADPHONE_INSERT"; break;
          case SW_RFKILL_ALL: *code_name = "SW_RFKILL_ALL"; break;
          case SW_MICROPHONE_INSERT: *code_name = "SW_MICROPHONE_INSERT";
            break;
          case SW_DOCK: *code_name = "SW_DOCK"; break;
          case SW_LINEOUT_INSERT: *code_name = "SW_LINEOUT_INSERT"; break;
          case SW_JACK_PHYSICAL_INSERT: *code_name = "SW_JACK_PHYSICAL_INSERT";
            break;
          case SW_VIDEOOUT_INSERT: *code_name = "SW_VIDEOOUT_INSERT"; break;
          case SW_CAMERA_LENS_COVER: *code_name = "SW_CAMERA_LENS_COVER";
            break;
          case SW_KEYPAD_SLIDE: *code_name = "SW_KEYPAD_SLIDE"; break;
          case SW_FRONT_PROXIMITY: *code_name = "SW_FRONT_PROXIMITY"; break;
          case SW_ROTATE_LOCK: *code_name = "SW_ROTATE_LOCK"; break;
          case SW_LINEIN_INSERT: *code_name = "SW_LINEIN_INSERT"; break;
          case SW_MUTE_DEVICE: *code_name = "SW_MUTE_DEVICE"; break;
          case SW_PEN_INSERTED: *code_name = "SW_PEN_INSERTED"; break;
        }
        break;
    }
    case EV_LED: {
        *event_name = "EV_LED";
        switch (code) {
          case LED_NUML: *code_name = "LED_NUML"; break;
          case LED_CAPSL: *code_name = "LED_CAPSL"; break;
          case LED_SCROLLL: *code_name = "LED_SCROLLL"; break;
          case LED_COMPOSE: *code_name = "LED_COMPOSE"; break;
          case LED_KANA: *code_name = "LED_KANA"; break;
          case LED_SLEEP: *code_name = "LED_SLEEP"; break;
          case LED_SUSPEND: *code_name = "LED_SUSPEND"; break;
          case LED_MUTE: *code_name = "LED_MUTE"; break;
          case LED_MISC: *code_name = "LED_MISC"; break;
          case LED_MAIL: *code_name = "LED_MAIL"; break;
          case LED_CHARGING: *code_name = "LED_CHARGING"; break;
        }
        break;
    }
    case EV_SND: {
        *event_name = "EV_SND";
        switch (code) {
          case SND_CLICK: *code_name = "SND_CLICK"; break;
          case SND_BELL: *code_name = "SND_BELL"; break;
          case SND_TONE: *code_name = "SND_TONE"; break;
        }
        break;
    }
    case EV_REP: {
        *event_name = "EV_REP";
        switch (code) {
          case REP_DELAY: *code_name = "REP_DELAY"; break;
          case REP_PERIOD: *code_name = "REP_PERIOD"; break;
        }
        break;
    }
    case EV_FF: {
        *event_name = "EV_FF";
        switch (code) {
          case FF_RUMBLE: *code_name = "FF_RUMBLE"; break;
          case FF_PERIODIC: *code_name = "FF_PERIODIC"; break;
          case FF_CONSTANT: *code_name = "FF_CONSTANT"; break;
          case FF_SPRING: *code_name = "FF_SPRING"; break;
          case FF_FRICTION: *code_name = "FF_FRICTION"; break;
          case FF_DAMPER: *code_name = "FF_DAMPER"; break;
          case FF_INERTIA: *code_name = "FF_INERTIA"; break;
          case FF_RAMP: *code_name = "FF_RAMP"; break;
          case FF_SQUARE: *code_name = "FF_SQUARE"; break;
          case FF_TRIANGLE: *code_name = "FF_TRIANGLE"; break;
          case FF_SINE: *code_name = "FF_SINE"; break;
          case FF_SAW_UP: *code_name = "FF_SAW_UP"; break;
          case FF_SAW_DOWN: *code_name = "FF_SAW_DOWN"; break;
          case FF_CUSTOM: *code_name = "FF_CUSTOM"; break;
          case FF_GAIN: *code_name = "FF_GAIN"; break;
          case FF_AUTOCENTER: *code_name = "FF_AUTOCENTER"; break;
        }
        break;
    }
    case EV_PWR: {
        *event_name = "EV_PWR";
        get_key_name(code, code_name);
        break;
    }
    case EV_FF_STATUS: {
        *event_name = "EV_FF_STATUS";
        switch (code) {
          case FF_STATUS_STOPPED: *code_name = "FF_STATUS_STOPPED"; break;
          case FF_STATUS_PLAYING: *code_name = "FF_STATUS_PLAYING"; break;
        }
        break;
    }
  }
}

#endif  // INCLUDED_UNIVERSAL_INPUT_INFO_STRINGS_H
